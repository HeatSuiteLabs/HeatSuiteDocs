{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Begin","text":"<p>New to HeatSuite? Start here.</p>"},{"location":"#what-is-heatsuite","title":"What is HeatSuite?","text":"<p>HeatSuite was initially designed as an all-in-one solution to enable researchers to monitor key heat-health responses during periods of extreme heat. However, during its development, it was soon realized that it could be advantageous to various research domains. Although the core of the platform - even its name - give homage to its roots, its a platform that can do much more. Researchers have begun using it to monitor sleep, occupational performance, rural compared to urban health, and indoor air quality impacts on health. </p>"},{"location":"#what-can-it-do","title":"What can it do?","text":"<p>The primary usecase of the HeatSuite system is to monitor the health and behaviour of end-users in their natural environment, while retaining the same level of data control and governance that is offered within typical lab based environments. While this does come with some limitations, HeatSuite attempts to minimize them as much as possible.</p>"},{"location":"#what-do-i-need","title":"What do I need?","text":"<p>As HeatSuite is a modular system, you can pick and choose what you want to incorporate into your study design. The system is designed in this way so as to not limit researcher creativity or impose restrictions on what you can measure. If there is something you want to add or a feature you'd like to see, let me know. Below is a list of components within the HeatSuite system that you can select from to increase your level of monitoring. Again, you do not need all components, you can even just use the watch to create a fully governed data collection solution!</p> <ul> <li>Bangle.js2<ul> <li>Documentation here</li> </ul> </li> <li>Environmental Node - Details incoming<ul> <li>docs coming soon</li> </ul> </li> <li>Satellite Nodes - Details incoming<ul> <li>docs coming soon</li> </ul> </li> </ul>"},{"location":"#citing-heatsuite-in-your-work","title":"Citing HeatSuite in your work","text":"<p>If you use HeatSuite, please cite it using the following publication(s):</p> <p>Ravanelli N, Lefebvre K, Mornas A, Gagnon D. Evaluating compliance with HeatSuite for monitoring in situ physiological and perceptual responses and personal environmental exposure. npj-Digital Medicine, 2025. doi: 10.1038/s41746-025-01608-z</p> <pre><code>@ARTICLE{Ravanelli2025-npj,\n  title     = \"Evaluating compliance with {HeatSuite} for monitoring in situ\n               physiological and perceptual responses and personal\n               environmental exposure\",\n  author    = \"Ravanelli, Nicholas and Lefebvre, Karlee and Mornas, Ad{\\`e}le\n               and Gagnon, Daniel\",\n  journal   = \"NPJ Digit. Med.\",\n  publisher = \"Nature Publishing Group\",\n  volume    =  8,\n  number    =  1,\n  pages     = \"223\",\n  month     =  apr,\n  year      =  2025,\n  language  = \"en\"\n}\n</code></pre> <p>Ravanelli N, Lefebvre K, Brough A, Paquette S, Lin W. Validation of an Open-Source Smartwatch for Continuous Monitoring of Physical Activity and Heart Rate in Adults. Sensors. 2025; 25(9):2926. doi: 10.3390/s25092926</p> <pre><code>@Article{Ravanelli2025-sensors,\nAUTHOR = {Ravanelli, Nicholas and Lefebvre, KarLee and Brough, Amy and Paquette, Simon and Lin, Wei},\nTITLE = {Validation of an Open-Source Smartwatch for Continuous Monitoring of Physical Activity and Heart Rate in Adults},\nJOURNAL = {Sensors},\nVOLUME = {25},\nYEAR = {2025},\nNUMBER = {9},\nARTICLE-NUMBER = {2926},\nURL = {https://www.mdpi.com/1424-8220/25/9/2926},\nISSN = {1424-8220},\nDOI = {10.3390/s25092926}\n}\n</code></pre>"},{"location":"#notice","title":"Notice","text":"<p>While every effort has been made to ensure the accuracy of the information on these pages, errors may still exist. The authors cannot be held responsible for any inaccuracies or resulting consequences. If you notice any mistakes, we encourage you to bring them to our attention.</p>"},{"location":"research/","title":"Research Using HeatSuite","text":"<p>Here is a list of publications using using HeatSuite.</p>"},{"location":"research/#peer-reviewed-publications","title":"Peer-Reviewed Publications:","text":"<p>Ravanelli N, Lefebre K, Mornas A, Gagnon D. Evaluating compliance with HeatSuite for monitoring in situ physiological and perceptual responses and personal environmental exposure. npj-Digital Medicine, 2025. doi: 10.1038/s41746-025-01608-z</p> <p>Ravanelli N, Lefebvre K, Brough A, Paquette S, Lin W. Validation of an Open-Source Smartwatch for Continuous Monitoring of Physical Activity and Heart Rate in Adults. Sensors. 2025; 25(9):2926. doi: 10.3390/s25092926</p>"},{"location":"research/#conference-presentations","title":"Conference Presentations:","text":"<p>Souilla, L., Lefebvre, K., Mornas, A., Kaiser, D., Gagnon, D., Ravanelli, N. In-situ responses of older adults living in social housing before, during and after a heatwave. Global Health Symposium, Copenhagen, Denmark, Dec 2025. Oral Presentation. </p> <p>Guzm\u00e1n-Echavarr\u00eda, G.,  Ravanelli, N., Middel, A., Rosales Chavez, J.B.,  Meltzer, C.,  Rentz, K., Munoz, M., Guardaro, M., Pinilla-Roncancio, M., Guzm\u00e1n-Echavarr\u00eda, E., Vanos, J., Decoding The Individual Heat Experience: Assessing Personal Heat Exposure, Adaptive Responses, and Non-Life Threatening Health Outcomes, NSF NCAR Research Symposium: Human and Geographic Dimensions of Extreme Heat and Heat Risk, Boulder, US, Jun 2025. Poster Presentation.</p> <p>Guzm\u00e1n-Echavarr\u00eda, G.,  Ravanelli, N., Middel, A., Rentz, K., Meltzer, C., Munoz, M., Guardaro, M., Rosales Chavez, J. B., Vanos, J., Unfolding the Individual Adaptive Response: Insights from Summertime Personal Heat Exposure and Thermal Preferences in Older Adults in Phoenix, Arizona. CAPLTER  All Scientists Meeting and Poster Symposium, Tempe, US, Jan 2025. Poster Presentation.</p> <p>Guzm\u00e1n-Echavarr\u00eda, G.,  Ravanelli, N., Middel, A., Rentz, K., Meltzer, C., Munoz, M., Guardaro, M., Rosales Chavez, J. B., Vanos, J., HeatSuite Phoenix Pilot: Assessing Non-life-Threatening Health Outcomes to Extreme Heat in Older Adults Living in Phoenix, Arizona. AMS Annual meeting 2025, New Orleans, US, Jan 2025. Oral Presentation.</p> <p>Ravanelli, N. Observing the in-situ physiological and behavioral responses heat-vulnerable individuals during extreme heat events to inform heat-illness detection models, International Conference on Environmental Ergonomics, Jeju, Korea 2024, Symposium.</p> <p>Ravanelli, N, Lefebvre K, Mornas A, Gagnon D. In situ physiological and behavioural responses of vulnerable populations during an extreme heat event in Montreal, Quebec 2023: a pilot study. American Physiological Society Summit, Long Beach, California, Poster Presentation 2024.</p>"},{"location":"nodes/","title":"Introduction","text":""},{"location":"nodes/#start","title":"Start","text":"<p>The HeatSuite platform contains Environmental Nodes which conduct various tasks, including monitoring the local environment, communicating with wearable devices for various tasks, the localization of users, and communication with the HeatSuite Cloud Instance. This documentation will give you an overview of what the nodes do and how to assemble them.</p>"},{"location":"nodes/#types-of-nodes","title":"Types of Nodes","text":"<p>At present, we have two primary nodes in the HeatSuite platform: Primary and and Secondary Nodes. The Primary nodes are the central points of contact for all devices within the HeatSuite ecosystem. The secondary nodes, previously called satellite nodes, are stripped down versions of the Primary nodes, and communicate directly with one paired Primary node for submitting data. </p>"},{"location":"nodes/#primary-nodes","title":"Primary Nodes","text":"<p>Within this category, we have 2 primary build options depending on what you want to measure and where. Each has their own advantages, and it is up to you to decide which is best for your application. The best part about the HeatSuite ecosystem is that all the parts are modular, such that you can change housing and include/remove components as needed.</p>"},{"location":"nodes/#housing-options","title":"Housing Options","text":"<p>Outdoor housing:</p> <p>Indoor housing:</p>"},{"location":"nodes/#environmental-monitoring-endpoints","title":"Environmental Monitoring Endpoints","text":"<p>Each sensor has one or more environmental variables which it monitors and collects. The HeatSuite system does not try to combine, estimate, or interpret the variables for you. All sensor data is stored and collected for the researcher to use as desired. The minimum temporal resolution is saving environmental data locally on an SD card every minute. </p> <p>Table 2. The measurement endpoints for each sensor. Onboard means it is available already on the main HeatSuite PCB, while a :material-plus: icon means its supported, but must be added separately.</p> Sensor Onboard? Ta RH CO2 NOx VOC PM Air Speed dbA Lux SHT41 SCD41 SGP40 SHT85 :material-plus: SEN55 :material-plus: HY-WDC2E :material-plus: PCB Artists Sound :material-plus: Adafruit VEML7700 :material-plus:"},{"location":"nodes/#secondary-nodes","title":"Secondary Nodes","text":"<p>TBD</p>"},{"location":"nodes/node-primary-build/","title":"Primary Node Assembly","text":""},{"location":"nodes/node-primary-build/#bill-of-materials","title":"Bill of Materials","text":"<p>Before we begin, here is a parts list of items for you to construct your own HeatSuite Primary Node. Optional parts are not needed. </p> <p>Table 1. Parts list for a Primary HeatSuite Node</p> Part Description Required Note HeatSuite PCB Daughter board for interfacing environmental sensors Yes LilyGo 7000G - 16MB Microcontroller with network connectivity, GPS, battery, and SD Card Yes 3010 5V Fan Forced aspiration of sensors No <sup>1</sup> CR2032 Battery For PCB onboard RTC No <sup>2</sup> Sensirion SEN5X Particulate Matter, SEN54: adds VOC, SEN55: adds NOx No <sup>3</sup> Adafruit VEML7700 Ambient Light Sensor No <sup>4</sup> PCB Artists Sound Meter  Decibel A meter (Range 30 dB to 120 dB) No <sup>4</sup> HY-WDC2E Ultrasonic anemometer No <sup>5</sup> Winsen MH-Z1911A Carbon Dioxide Sensor (NDIR) No <p>Table 2. The minimum additional hardware needed, and their quantities based on the housing selected.</p> Part Quantity (Outdoor Housing) Quantity (Indoor Housing) M3 threaded insert (OD: 4.2mm, Length: 5mm) 3 7 M3 screw (5mm) 5 5 M3 screw (16mm) 2 2 M3 nut 4 4 M4 threaded rod (150mm) 4 0 M4 nut 8 0 M4 knurled nut 4 0"},{"location":"nodes/node-primary-build/#assembling-the-pcb-tray","title":"Assembling The PCB tray","text":"<p>Both housings use the same PCB tray, which makes it easy to move from one design to the other. The tray is meant to be servicable, extending the life of the Primary Node. </p>"},{"location":"nodes/node-primary-build/#mounting-the-pcb","title":"Mounting the PCB","text":"<ol> <li> <p>Recommended for forced aspiration on the sensors, especially when used with the outdoor housing.\u00a0\u21a9</p> </li> <li> <p>Recommended for maintaining time on the onboard realtime clock during power down.\u00a0\u21a9</p> </li> <li> <p>Requires a double head JST-GH 6-Pin connector, HeatSuite allows you to use any of the environmental sensors in the SEN5X series.\u00a0\u21a9</p> </li> <li> <p>Requires a double head JST-XH 5-Pin connector, and a male connector soldered to sensor pcb for easy connection.\u00a0\u21a9\u21a9</p> </li> <li> <p>Must be programmed by manufacturer with the following settings: RS232, NMEA0183, 9600 Baud no parity\u00a0\u21a9</p> </li> </ol>"},{"location":"watchapp/","title":"Watch Setup","text":""},{"location":"watchapp/#installing-the-watch-app","title":"Installing the Watch App","text":"<p>To install HeatSuite on the Bangle.js2, you can use either the primary Bangle.js2 App Loader for stable releases, or the HeatSuiteLabs version for pre-release/experimental features. </p> <p>Search for the HeatSuite app:</p> <p></p> <p>Then click the \u2261 to open the app customizer. You will need to connect to the Bangle.js2 watch to access the app customizer as some settings will be taken from the watch if HeatSuite was previously installed.</p> <p></p> <p>Each of the tabs contain settings you can set for the application, including Tasks and Ecological Momentary Assessments. Once you are satisfied with your settings, click \"upload\" at the bottom of the window. </p>"},{"location":"watchapp/#pairing-a-bluetooth-heart-rate-strap","title":"Pairing a Bluetooth Heart Rate Strap","text":"<p>HeatSuite leverages the BTHRM app available from the Bangle.js App Loader. This will automatically install alongside the HeatSuite app. Pairing a heart rate strap, particularly an ECG based one, is advantageous as you will also aggregrate all RR-intervals each minute (if supported by the heart rate monitor). We have tested the Polar H10 and the Powr-Labs chest-based HRM and both broadcast RR-intervals.</p> <p>Follow these instructions on the watch to pair a Bluetooth HRM:</p> <ol> <li>Navigate to <code>Settings-&gt;Apps-&gt;BTHRM</code></li> <li>Click <code>BLE Scan</code>, which will scan for nearby Bluetooth HRM devices. If your device is not found, make sure it is on (some must be worn to be active and broadcasting).</li> <li>After the scan, you should be presented with a list of found devices. Click the one you want to pair to the watch.</li> <li>The pairing process will start and should return successful. If not, repeat scan.</li> </ol> <p>Note: The HeatSuite widget will have a BLUE Heart to demonstrate that a bluetooth heart rate strap is paired and sending data - green means just optical heart rate.</p> <p>Note: Pairing an HRM does not automatically have it log data within HeatSuite, you must also enable BTHRM as a 'Recorder option' of HeatSuite; either within the App Loader Screen or on the watch within HeatSuite Settings.</p>"},{"location":"watchapp/#pairing-a-corecalera-sensor","title":"Pairing a CORE/CALERA Sensor","text":"<p>The CORE Sensor is a device which indirectly estimates core body temperature using a heat flux sensor (read more about it here) and can measure skin temperature. The onboard proprietary algorithm has two modes, free-living and exertional, where exertional only engages when heart rate exceeds 120 BPM, and requires the pairing of an ANT+ or Bluetooth Heart Rate Strap to the CORE Sensor. While I will not comment on the validity and reliability of the GreenTEG solution for estimating core body temperature (you can read other validation studies for specific use cases), I included it in HeatSuite for skin temperature and heat flux monitoring (CALERA version is only capable of broadcasting heat flux - likely firmware locked on the CORE). Pairing the CORE/CALERA Sensor with the Bangle.js2 uses the coretemp app available from the Bangle.js App Loader. </p> <p>Follow these instructions on the watch to pair a CORE/CALERA Sensor:</p> <ol> <li>Navigate to <code>Settings-&gt;Apps-&gt;CoreTemp</code></li> <li>Click <code>Scan for CORE</code> , which will scan for nearby CORE/CALERA devices. If your device is not found, shake it until the green LED flashes.</li> <li>After the scan, you should be presented with a list of found devices. Click the one you want to pair to the watch.</li> <li>The pairing process will start and should return successful. If not, repeat scan.</li> </ol> <p>After you pair the CORE/CALERA Sensor, you will be prompted to pair a heart rate strap over ANT+. We use ANT+ instead of Bluetooth as chest-based HRM devices with both ANT+/BLE enable simultaneous broadcasting. Using ANT+ here allows you to also connect the strap over BLE to the watch to collect RR-intervals, too. </p> <p>To pair an ANT+ HRM:</p> <ol> <li>Continue after your successful pairing of the CORE Sensor, or navigate to <code>Settings-&gt;Apps-&gt;CoreTemp-&gt;HRM Settings</code></li> <li>Click <code>Scan for ANT+</code>. This will scan for 10 seconds to find nearby ANT+ HR devices. </li> <li>The first one in the list should be the nearest device, so click its ID and it will begin to pair.</li> </ol> <p>Note: I recommend enabling the CORE Sensor Widget to monitor its connection. The widget will glow green when connected to the Bangle.js2.</p> <p>Note: Pairing a CORE/CALERA Sensor does not automatically have it log data within HeatSuite, you must also enable CORE Sensor as a 'Recorder option' of HeatSuite; either within the App Loader Screen or on the watch within HeatSuite Settings.</p>"},{"location":"watchapp/#downloading-data","title":"Downloading Data","text":"<p>While the easiest route for downloading data is by pairing it with a HeatSuite Primary Node, You can use the watch independently and download HeatSuite specific data files from the BangleApps site by clicking the Download Tab:</p> <p></p> <p>You can download each file separately, or all of them as a zip file.</p>"},{"location":"watchapp/watchapp-ema/","title":"HeatSuite Watch App - Ecological Momentary Assessments","text":""},{"location":"watchapp/watchapp-ema/#what-are-ecological-momentary-assessments-aka-ema","title":"What are Ecological Momentary Assessments (aka EMA)?","text":"<p>Ecological Momentary Assessment (EMA) is a research method that involves collecting data about an individuals' behaviors, experiences, emotions, or physiological states in real time and in their natural environments. This method enables the collection of \"right here, right now\" data whereby users respond to questions directly on the watch.</p>"},{"location":"watchapp/watchapp-ema/#what-questions-can-i-ask","title":"What questions can I ask?","text":"<p>Short answer, anything! As HeatSuite was designed to be a researcher first tool, it does not come with pre-defined questions. You are in full control of what questions you want to ask, and their design - within the limits of the software. In brief, the best questions are short with simple responses (one/two words per option).</p>"},{"location":"watchapp/watchapp-ema/#how-do-i-add-ema-questions","title":"How do I add EMA questions?","text":"<p>Adding EMA to the watch app requires you to simply upload a properly formatted heatsuite.survey.json file to the watch. This is done during the HeatSuite app installation on the Bangle.js2. If you want to add in additional programmatic \"nudging\", you will need to include the survey task in your heatsuite.tasks.json file (how do I do that?).</p>"},{"location":"watchapp/watchapp-ema/#formatting-heatsuitesurveyjson","title":"Formatting heatsuite.survey.json","text":"<p>Below is an example of a heatsuite.survey.json file with one question, with two available languages that you can use to build your EMA questions from:</p> <p><pre><code>{\n\"supported\":{\n    \"en_GB\":\"English (GB)\",\n    \"fr_CA\":\"Francais (CA)\"\n    },\n\"questions\":[{\n    \"key\":\"comfort\",\n    \"followup\": false,\n    \"text\": {\n        \"en_GB\":\"Thermal comfort?\",\n        \"fr_CA\":\"Confort thermique?\"\n        },\n    \"tod\":[[0,2359]],\n    \"oncePerDay\": true,\n    \"orderFix\":false,\n    \"options\": { \n        \"type\" : \"scroll\",\n        \"responses\": [{\n                \"text\":{\n                    \"en_GB\":\"Comfortable\",\n                    \"fr_CA\":\"Confortable\"\n                    },\n                \"value\":0,\n                \"color\":\"#ffffff\",\n                \"btnColor\":\"#38ed35\"\n                },{\n                \"text\":{\n                    \"en_GB\":\"Uncomfortable\",\n                    \"fr_CA\": \"Inconfortable\"\n                    },\n                \"value\":1,\n                \"color\":\"#ffffff\",\n                \"btnColor\":\"#ff0019\",\n                \"next\": \"uc_reason\"\n                }]\n        }\n    }]\n}\n</code></pre> And this will present us with this question on the watch (the top text is scrolling if it does not fit on screen):</p> <p></p> <p>Lets break it down: <pre><code>\"supported\":{\n    \"en_GB\":\"English (GB)\",\n    \"fr_CA\":\"Francais (CA)\"\n    }\n</code></pre> <code>supported</code> is object <code>{}</code> which contains all supported languages for your EMA. You must include all supported languages here as <code>key:value</code> with the key being the identifier (e.g. <code>en_GB</code>) and the value being the descriptor (e.g. <code>English (GB)</code>). The user will be able to select their prefered language within <code>Settings-&gt;Apps-&gt;HeatSuite</code>. HeatSuite recommends following the language convention used within BangleApps locales.js. <pre><code>\"questions\":[]\n</code></pre> <code>questions</code> will contain an array <code>[]</code> of objects <code>{}</code>. Within each object is the details and settings of your question. Below is what a question object would look like:</p> <pre><code>{\n    \"key\":\"comfort\",\n    \"followup\": false,\n    \"text\": {\n        \"en_GB\":\"Thermal comfort?\",\n        \"fr_CA\":\"Confort thermique?\"\n        },\n    \"tod\":[[0,2359]],\n    \"oncePerDay\": true,\n    \"orderFix\":false,\n    \"options\": { \n        \"type\" : \"scroll\",\n        \"responses\": [{\n                \"text\":{\n                    \"en_GB\":\"Comfortable\",\n                    \"fr_CA\":\"Confortable\"\n                    },\n                \"value\":0,\n                \"color\":\"#ffffff\",\n                \"btnColor\":\"#38ed35\"\n                },{\n                \"text\":{\n                    \"en_GB\":\"Uncomfortable\",\n                    \"fr_CA\": \"Inconfortable\"\n                    },\n                \"value\":1,\n                \"color\":\"#ffffff\",\n                \"btnColor\":\"#ff0019\",\n                \"next\": \"uc_reason\"\n                }]\n        }\n}\n</code></pre> <ul> <li><code>key</code>: The definition/classification you want to give this question</li> <li><code>followup</code> (optional, default is false): This labels a question as a follow up question. You can use this to create questions that are asked only when a given response is received.</li> <li><code>text</code>: an object <code>{}</code> containing the question/prompt with keys corresponding to all supported languages and values containing the text to be presented.</li> <li><code>tod</code>(optional): an array <code>[]</code> of arrays <code>[]</code> containing possible restrictions of the question depending on time of day (in 24h clock). Within this example, The question may be presented at any time of day (<code>[0,2359]</code>). However, if you want to restrict the question to only be visible in the morning, you would adjust to <code>[0,1159]</code>. If you only want questions to be restricted to specific times of day, you can add multiple time windows in the array like this: <code>\"tod\":[[0,1159],[1400,1800]]</code>. In this example, you will only see the question between 00:00 &amp; 11:59, or 14:00 &amp; 18:00.  </li> <li><code>oncePerDay</code>(optional): a boolean value (<code>true</code> or <code>false</code>) to restrict the question to only appear once a day.</li> <li><code>orderFix</code> (optional): a boolean value (<code>true</code> or <code>false</code>) to fix the order of this question if you have selected question randomization in HeatSuite settings.</li> </ul>"},{"location":"watchapp/watchapp-ema/#formatting-your-options-object-for-different-response-types","title":"Formatting your options object for different response types","text":"<p>With HeatSuite watch app v0.12 and above, you now have the option to chose between  scrolling through responses or a numerical based response. Each uses the same <code>options</code> object <code>{}</code>, but with different settings. See below:</p> <ul> <li><code>options</code>: an object <code>{}</code> containing the following keys:<ul> <li><code>type</code>: A string defining the type of response style to generate (<code>number</code> or <code>scroll</code>)</li> <li><code>startOpt</code> (required for <code>number</code> type): The value you want presented first.</li> <li><code>min</code> (required for <code>number</code> type): The smallest value that can be selected.</li> <li><code>max</code> (required for <code>number</code> type): The highest value that can be selected.</li> <li><code>optStep</code> (required for <code>number</code> type): The step between values (e.g. 1 unit increments would be 1).</li> <li><code>units</code> (optional): To append to the visible response.</li> <li><code>next</code> (optional, ignored if responses is used): An object <code>{}</code> containing the specific response id as <code>keys</code>, where their <code>value</code> is the the key of the follow up question.</li> <li><code>responses</code> (required for <code>scroll</code> type): An array <code>[]</code> of objects <code>{}</code> containing details for each option to present for the user to select. Within each object, you have the following options:<ul> <li><code>text</code>: object <code>{}</code> containing your language specific (key) option text (value).</li> <li><code>value</code>: the numerical value you wish for response coding.</li> <li><code>color</code>: The color of the option text.</li> <li><code>btnColor</code>: The color of the option background.</li> <li><code>next</code> (optional): the unique <code>key</code> of the follow up question. When this option is pressed, this will present the user the defined follow up question. **</li> </ul> </li> </ul> </li> </ul> <p>**Notes on <code>next</code> option: This allows for more detailed responses and feedback. You can even iterate this 'next' feature to keep asking the same question over and over, or nest multiple follow up questions depending on response.</p>"},{"location":"watchapp/watchapp-hsmodule/","title":"HeatSuite Module","text":""},{"location":"watchapp/watchapp-hsmodule/#what-is-it","title":"What is it?","text":"<p>The HeatSuite module is a class of functions that are specific to the needs of the HeatSuite application. When creating customs tasks or added features to HeatSuite, I suggest we continue to use this class for consistency.</p> <p>To initiate the class, declare it before any use:</p> <pre><code>const modHS = require('HSModule');\n</code></pre>"},{"location":"watchapp/watchapp-hsmodule/#functions","title":"Functions","text":""},{"location":"watchapp/watchapp-hsmodule/#savedatatofiletask-fileid-data","title":"<code>saveDataToFile(task, fileID, data)</code>","text":"<p>Description: saves data to a file, and updates the cache with the last time the task was complete.</p> <p>Parameters: + <code>task</code> (String) \u2013 task ID that is defined in the Task's object. + <code>fileID</code> (String) \u2013 The file name identifier that will be added to the HeatSuite filename scheme: <code>htst_fileID_DDMMYYYY</code> + <code>data</code> (Object) - An object containing keys corresponding to the column headers and corresponding data as their values.</p> <p>Returns: boolean \u2013 returns true if successful</p>"},{"location":"watchapp/watchapp-hsmodule/#parsebledatabuffer-schema","title":"<code>parseBLEData(buffer, schema)</code>","text":"<p>Description: parses and returns BLE data based on the schema provided.</p> <p>Parameters: + <code>buffer</code> (Array) \u2013 byte array of data received over bluetooth. + <code>schema</code> (Object) \u2013 The expected data schema from the bluetooth characteristic</p> <p>Returns: Object \u2013 returns an object with the schema populated</p>"},{"location":"watchapp/watchapp-tasks/","title":"HeatSuite Watch App - Tasks","text":""},{"location":"watchapp/watchapp-tasks/#what-are-tasks","title":"What are tasks?","text":"<p>Similar to the question-based ecological momentary assessments, you can also add tasks to your HeatSuite install for users to perform. The data collected from these tasks will automatically save to the watches internal storage for future downloading.</p>"},{"location":"watchapp/watchapp-tasks/#how-do-i-add-tasks-in-my-study","title":"How do I add tasks in my study?","text":"<p>The custom Bangle.js App Uploader for HeatSuite includes a json editor for detailing tasks which are uploaded to the watch as a <code>heatsuite.tasks.json</code> file. Tasks and their options are organized as nested objects <code>{}</code> within an array <code>[]</code>.</p>"},{"location":"watchapp/watchapp-tasks/#how-do-i-see-the-tasks-in-my-study-on-the-watch","title":"How do I see the tasks in my study on the watch?","text":"<p>Simply onlock the screen and swipe right when the widget is active and you will be greeted with the main Heatsuite App:</p> <p></p> <p>This is the default setup, showing you all the possible options at present. The colors of each of the buttons provide the user some feedback:</p> <ul> <li>Green Means the task has been completed recently and/or the user can press the button to navigate to or do a task*.</li> <li>Red means that the task can't be completed yet because another step needs to be done. This example shows that the external devices have yet to be paired with the watch.</li> <li>Yellow means you are scheduled to do this task.</li> </ul> <p>*Note: If the task requires a bluetooth device, the app will scan for the device and automatically handle the task once found.</p> <p>The <code>Searching...</code> text at the bottom of the screen shows that the watch is searching for devices that it may need to connect to via Bluetooth. This text will change when a device is found, and the appropriate handling of the task will ensue. As Bluetooth scanning drains the battery, the HeatSuite App will timeout after 3 minutes and revert back to the clock.</p> <p>Note: This will only show when a bluetooth device is associated with a task.</p>"},{"location":"watchapp/watchapp-tasks/#formatting-heatsuitetasksjson","title":"Formatting heatsuite.tasks.json","text":"<p>Below is an example of a properly formatted <code>heatsuite.tasks.json</code> with 2 tasks (survey &amp; Blood Pressure):</p> <p><pre><code>[\n    {\n        \"id\": \"survey\",\n        \"icon\": 'require(\"heatshrink\").decompress(atob(\"lEo4kA///6H7BIP2m9hjEpyQLBxeq0UAp3js1Z5F59GB9nChvL+83E4cCkQABkA6NgUq293rVCChsq6MRAAOcoQmM4ISCAAPqFBclCQkRjJpBExOxCYsR8goJkmRB4XuAYUVCZMsJYdEFgUZoATIpwTC1XnooFC2QTIoIhCC4OqCYVyMRGhBoXhjNLAoXSCZkR2mpAgXilGIwRnFCYlKPgd40czmeoCglJCYd5AgdYn////zCgknBwfZAgeqCQIUCwQTClQOD3oDCj1DCYf/nATHAAcawYTE/Q8CkoTHvE/+c6mY8FMYgACi9Kn84xAqDmSfC7euCYnE0f/1CKBPQRQBgWqkUk3zeCvWKBwJ4BnATFKQUipWq0koBoSyBxATDZYsCkUAOgk4AoYTGAAUjCYgmCUAgAFlQTDRQQTGgUowQuBJ4f/nQEDRYIiD81u0UAhAODmYECeAkCq1ms1nkECbIoACD4ImCCQIAB2QGBFAYADHYchs3nv1msguBY4IAD+bhBCYVGs261YTCMovz1GKnSfCCYIACtRXCxTHBeAJYBxGACYek8wnDSYWIxAjCdocls0eE4PiXhAAEhEWCQNhoATNgFOCYPkCRxABpdqIQQUP2gSQCYMiCaMAHRw=\"))',\n        \"cbBtn\": \"Bangle.load('heatsuite.survey.js');\",\n        \"tod\": [\n          900,\n          1200,\n          1500,\n          1800\n        ],\n        \"debounce\": 300\n    },{\n        \"id\": \"bloodPressure\",\n        \"icon\": 'require(\"heatshrink\").decompress(atob(\"lEo4kA///zND//3BYOe98ggHGhEllM533ssW5odBhFOud642DhE10omCnczHSO3s3jmATP3MRjNrCh+2s0ZzNrCJkDn1mv1382X8YlMyMRi1xy1hzwSKhdxs12CYIWBu5RKm8WtMeCYfp8ATJ2MRiITDjPpsCUCu4ADv2w24TBjITCiOZE4MLCQgABve+MQMXCYeW2ATBv2ZAAeeve28w7Ey3mE4dCkQACx172INBtd+s1m81xJ4ITBpH/wn//oTB29pjIRBs1nAgITD7l3zGXv4nDsJRBiORz1hCYdCogBCCYWhiNusNutIWByA7EKIXXCYOq1QPBAAIZBiA7DvITCp4TDAAYTBHYp3CpgTNxvdAAX+CZl+9wAECZjDBbIQEBCZwlC9ITOy98zOcFAITOzl+vgTQvJSCJ6QWBCYMaCZED852CAAXj21pCgkRswTBgEzmc78/rAgMwm1usLvDz1m2ATBAAMD5+TAodpiIVBt3njN+CYvn8YGDnwnEu18uAMDgHpDQkAnfms1mtc+/4TFvngAwgxCAQV3EAt8AwoWFvIMF5gTKgF/HYv5mATKnPLAoc3+4TLh3J8ayCvieDKBN85LVBznJJxaSCvPM5nJuYSMCgW73ezBIoA=\"))',\n        \"tod\": [\n          830,\n          1330,\n          1930\n        ],\n        \"debounce\": 3600,\n        \"btPair\": true,\n        \"btInfo\": {\n          \"service\": \"1810\",\n          \"supported\": [\n            \"A&amp;D_UA-651\"\n          ]\n        },\n        \"options\":{}\n    }\n]\n</code></pre> Lets break it down for the <code>Blood Pressure</code> task:</p> <ul> <li><code>id</code>: The identifier for the task. This is what is used in the cache file to associate the last reading with the task. must be unique.</li> <li><code>icon</code>: This is a single quote encapsulated javascript function, which will be passed through the <code>eval()</code> function to render an image in the button. For immediately available tasks, HeatSuite provides icons, but you are free to change them as you wish. You can use Espruino's Image Converter to generate the javascript function. Recommended settings include: Compression, transparent, and 40x40 px in size.</li> <li><code>tod</code>: (optional) An array of times of day (in HHMM) when the user will be notified that they need to do task(s).</li> <li><code>debounce</code>: (optional) This is the range, in seconds, whereby a notification will not be sent if the task was completed within that time frame of the nudge.</li> <li><code>btPair</code>: (optional) Required for any devices that must be paired before communication.</li> <li><code>btInfo</code>: (optional) Contains an object <code>{}</code> with details about the bluetooth device and what filters are needed for a connection.</li> <li><code>options</code>: (optional) Task-specific options that can be defined to modify the task.</li> </ul>"},{"location":"watchapp/watchapp-tasks/#what-tasks-are-immediately-available","title":"What tasks are immediately available?","text":"<p>In the current HeatSuite Watch App version, the following tasks have already been embedded and examples are provided for inclusion in the <code>heatsuite.tasks.json</code> file:</p> <ul> <li>Blood Pressure (requires A&amp;D Medical UA651-BLE)</li> <li>Oral Temperature (requires custom BLE dongle)</li> <li>Body Composition (requires Xiaomi Mi Scale 2)</li> <li>Mictruition</li> <li>Ecological Momentary Assessments</li> <li>5x Sit To Stand</li> <li>Custom Tasks</li> </ul>"},{"location":"watchapp/watchapp-tasks/#blood-pressure","title":"Blood Pressure","text":"<p>Example task object for blood pressure measurements using the A&amp;D Medical UA651-BLE:</p> <pre><code>{\n    \"id\": \"bloodPressure\",\n    \"icon\": 'require(\"heatshrink\").decompress(atob(\"lEo4kA///zND//3BYOe98ggHGhEllM533ssW5odBhFOud642DhE10omCnczHSO3s3jmATP3MRjNrCh+2s0ZzNrCJkDn1mv1382X8YlMyMRi1xy1hzwSKhdxs12CYIWBu5RKm8WtMeCYfp8ATJ2MRiITDjPpsCUCu4ADv2w24TBjITCiOZE4MLCQgABve+MQMXCYeW2ATBv2ZAAeeve28w7Ey3mE4dCkQACx172INBtd+s1m81xJ4ITBpH/wn//oTB29pjIRBs1nAgITD7l3zGXv4nDsJRBiORz1hCYdCogBCCYWhiNusNutIWByA7EKIXXCYOq1QPBAAIZBiA7DvITCp4TDAAYTBHYp3CpgTNxvdAAX+CZl+9wAECZjDBbIQEBCZwlC9ITOy98zOcFAITOzl+vgTQvJSCJ6QWBCYMaCZED852CAAXj21pCgkRswTBgEzmc78/rAgMwm1usLvDz1m2ATBAAMD5+TAodpiIVBt3njN+CYvn8YGDnwnEu18uAMDgHpDQkAnfms1mtc+/4TFvngAwgxCAQV3EAt8AwoWFvIMF5gTKgF/HYv5mATKnPLAoc3+4TLh3J8ayCvieDKBN85LVBznJJxaSCvPM5nJuYSMCgW73ezBIoA=\"))',\n    \"tod\": [830,1330,1930],\n    \"debounce\": 3600,\n    \"btPair\": true,\n    \"btInfo\": {\n        \"service\": \"1810\",\n        \"supported\": [\"A&amp;D_UA-651\"]\n    }\n}\n</code></pre>"},{"location":"watchapp/watchapp-tasks/#oral-temperature","title":"Oral Temperature","text":"<p>Example task object for oral temperature measurements using a custom Bluetooth dongle interfacing with a YSI-400 series probe (contact Nick Ravanelli for more details):</p> <pre><code>{\n    \"id\": \"coreTemperature\",\n    \"icon\": 'require(\"heatshrink\").decompress(atob(\"lEo4kA///A4Pf99fx3YtnjjEkkN/7+X0ujoFK/VusdBhH0ykIoXY2ozPjnBIyEBr2piATPiuq1WREx9aCYIoPjmaCYIoOgNo9ITC1gTMi3yvwoC9gmNw8nFAVRExmL5dyFAOlMZcBt+2223FAImN+9Emlru/cExlo6kzme8x9hJptkmYnBwwmN21DmdG3Am/TZF28YmPgvyl9rEx0AjsikX28wmNgFnkVyFAImNgHnl7pBvAmNgOyk/3u/2ExsM6UiEx8Ajd3u9/6omNgO3u/b8wSNgEeu974IRNEwPvu+xCRzrB+/+HBwABrF/8ISPhnXYBwAC5t9qImQ2/cCR8Ajm32ASPgPr5YmQj3eMCEB9qHQEycA5wmROoImRgAA==\"))',\n    \"tod\": [830,1330,1930],\n    \"debounce\": 3600,\n    \"btPair\": true,\n    \"btInfo\": {\n        \"service\": \"1809\",\n        \"supported\": [\"BLEThermistorPod\"]\n    }\n}\n</code></pre>"},{"location":"watchapp/watchapp-tasks/#body-composition","title":"Body Composition","text":"<p>Example task object for body composition using the Xiaomi Body Composition Scale 2 <pre><code>{\n    \"id\": \"bodyMass\",\n    \"icon\": \"require('heatshrink').decompress(atob('lEo4kB3//AAIJB7//wUQjnn485t97vvvoMIhlj9dasspptbz33kshiIApkUpylP/nGswAB5n/pOSkQSEl+3utVAAOI93uxAGCq96+QSCil1gczABdXyITBo4SDmt6ut61Wq09TBQU+ukRiVwDgcK5t1vvd7vc0ALD88hjgbDmcLvxOBAAOH2ALDgvBk5EEq1+wpfBrGHsoLDh1yyouEtN+q3M5llw+WvwMCgF5CYMFu9V3l2E4tn5dVu9Qh1ZCYN0/9E2s65phBMYWjrdE/9HCYOXmv2u9kqaLBRIKLDmtLu9vqF5y83o930lzWA83+4MCvMnmtKCZYgB2lQuQTBtmr5ijEAAc15mr+1euUqTYNESwgAFBgUO0Urgc+uwmIFAVn8fu2UW8czu2DCZM4s8z9FhCYVcE5fFmflsMcCAITP4MfCaPxigQB8yeIUAVumHloMZCYMLCZewCYORCYU32YTJndzCYUSEgM34p7BAA0+rgTBg8hCYM+ulE2oTHrdEo/g84TCmvLvdHgYSFmF009kuYTEu93tiNGDwN3vm+CYWjm9nCZvqkMR2E3pV6pQ7H1932lw9cRiNonGk+llMY9Wp9KwFWCYNFZgN3HQflrw8Du9emFUCYMqG41cdIIAEh2yCYMUbI1VqpSF89BCYMRo7FIAAc4ugSCiMZ2tY9wAGn3uwt7yITDiMp+1mAAtqrVmt+SCQgAl'))\",\n    \"tod\": [800],\n    \"debounce\": 3600,\n    \"btPair\": false,\n    \"btInfo\": {\n        \"service\": \"181b\",\n        \"supported\": [\"MIBFS\"]\n    }\n}\n</code></pre></p>"},{"location":"watchapp/watchapp-tasks/#mictruition","title":"Mictruition","text":"<p>Example task object for the micruition feature which can be used to record urination frequency (indirect assessment of hydration Burchfield et al. 2015), and subjective ratings of flow rate and urine color.</p> <pre><code>{\n    \"id\": \"urine\",\n    \"icon\": \"require('heatshrink').decompress(atob('lEo4kA///7/3oMInGVtdC//3rvn5lS7/Gx1rksZDYIXB7edkAFB4wqGhcukXgHp0Lkkz6eaCheykWq9Ux5nM42elWilwjH0c97VG5lVqtcjOp7s3JwIAEgU4xF6tgSBAAPBzXf/FACYsK7GD1vFCYdcjuIx+bCY/azgSDAANRyePzwTHzQ6EAAWax87CY2Z1I6EHgVqvNyMY0q1ATGqsX1XrRg1JoITH4dJRY0Ao5iGAAPN1MkogVFogTI42p1uIUItEngTJ0lE0AnQle7J59d1JjHoemO4/JoYTHpGjWZGTCY9BzWMCYvBzVjCZFn1tc5gADtOtqewCY2py/qvOZAAeu1OUCY0LSYN3ogAEo90Yo0AgU4xAAJYooTBzvdABLFFAAMq1QAJMY+0ExMyCQ0AgkRjiKEAAQTIhVhirbGrmeCY8C6MRCY1VvYTHhwTI4x2HAANhCY/Ndw4AB0YTG5mERQ5QCods5nFrnM4Np1YSIAAOy1PWiMRtE31wSKgEL0mq0lEAQJNJHgc96c5zM9xFLCZcE7GPAAP4x7FIAAe5xGP/4AC7QTLlMzAAk0RRIAB8UiAAkuCYwA=='))\",\n    \"cbBtn\": \"Bangle.load('heatsuite.urine.js');\",\n    \"debounce\": 0,\n    \"tod\": [],\n    \"options\": {\n        \"alwaysColor\" : false //Always show the color scale when logging mictruition. Default is false.\n    }\n}\n</code></pre>"},{"location":"watchapp/watchapp-tasks/#ecological-momentary-assessments","title":"Ecological Momentary Assessments","text":"<p>Example task object for Ecological Momentary Assessments where you want to programmatically nudge participants at fixed times of day. Requires a properly formatted <code>heatsuite.survey.json</code> file, which is explained here.</p> <p>NOTE: This is not required if all you want to do is have surveys completed from a different queuing mechanism. </p> <pre><code>{\n    \"id\": \"survey\",\n    \"icon\": 'require(\"heatshrink\").decompress(atob(\"lEo4kA///6H7BIP2m9hjEpyQLBxeq0UAp3js1Z5F59GB9nChvL+83E4cCkQABkA6NgUq293rVCChsq6MRAAOcoQmM4ISCAAPqFBclCQkRjJpBExOxCYsR8goJkmRB4XuAYUVCZMsJYdEFgUZoATIpwTC1XnooFC2QTIoIhCC4OqCYVyMRGhBoXhjNLAoXSCZkR2mpAgXilGIwRnFCYlKPgd40czmeoCglJCYd5AgdYn////zCgknBwfZAgeqCQIUCwQTClQOD3oDCj1DCYf/nATHAAcawYTE/Q8CkoTHvE/+c6mY8FMYgACi9Kn84xAqDmSfC7euCYnE0f/1CKBPQRQBgWqkUk3zeCvWKBwJ4BnATFKQUipWq0koBoSyBxATDZYsCkUAOgk4AoYTGAAUjCYgmCUAgAFlQTDRQQTGgUowQuBJ4f/nQEDRYIiD81u0UAhAODmYECeAkCq1ms1nkECbIoACD4ImCCQIAB2QGBFAYADHYchs3nv1msguBY4IAD+bhBCYVGs261YTCMovz1GKnSfCCYIACtRXCxTHBeAJYBxGACYek8wnDSYWIxAjCdocls0eE4PiXhAAEhEWCQNhoATNgFOCYPkCRxABpdqIQQUP2gSQCYMiCaMAHRw=\"))',\n    \"cbBtn\": \"Bangle.load('heatsuite.survey.js');\",\n    \"tod\": [900,1200,1500,1800],\n    \"debounce\": 300\n}\n</code></pre>"},{"location":"watchapp/watchapp-tasks/#5x-sit-to-stand","title":"5x Sit to Stand","text":"<p>The Five Times Sit-to-Stand Test (5xSTS) is a simple functional assessment used to evaluate lower limb strength, balance, and mobility. In this test, participants sit in a standard-height chair without armrests, cross their arms over their chest, and are instructed to stand up and sit down five times as quickly and safely as possible. The total time taken to complete the five repetitions is recorded. The test provides an objective measure of functional lower-body performance and is widely used in clinical, geriatric, and exercise physiology settings.</p> <p>NOTE: Validation ongoing - use at your own risk.</p> <pre><code>{\n    \"id\": \"5sts\",\n    \"icon\": 'require(\"heatshrink\").decompress(atob(\"lEo4kA///A4PTzkv/8fp/tjWCBoNGw+DrlGh0b9WsFZ8RiMQCR8BCYMREyEzmYoPgMTCYMxCaQoBCcs4HZ5jCJ553Bic7UCCfTCgLGQAAQTRHYQUQiMZoLvRolEoIoNBoMUCZ5MBgITQiMhiIT/CfbeMCZDeKCYoAC0IoJCZBSKCYMQiITRJQQACFgJQJCY4sBCZcSkQABIAYnPCYehCaEBihkJBwQEECc8AixkJCZB4KCakRCYYECgIEBCY4KBAgwDBMYg=\"));',\n    \"tod\": [900],\n    \"debounce\": 300\n}\n</code></pre>"},{"location":"watchapp/watchapp-tasks/#custom-tasks","title":"Custom Tasks","text":"<p>A unique feature to HeatSuite is the ability for researchers to create their own tasks and add them to the task object. Lets create a sleep marker where when users press the onscreen button, it will log an event marker. here is an example task object:</p> <p><pre><code>{\n    \"id\": \"sleep\",\n    \"icon\": \"require('heatshrink').decompress(atob('lEo4kA///v3nBIPDjE968CqOzxlX/1m0VBhGBkHb61qpV4/0978Y2xZ1gQTmkQ9VkA9llJKMJZMjmRADlM85gAC4eSBYUCCIOW23Mmc281v30RAAXr+wLBmfMt9py0Rj27CAgAEBYIMCtMsB5AAE///33u4UD2ISLjfMnNu9cwhPxE5nr5m+9+QgVhBYhpBAAVrA4Mcn/ui0gCYsWnVVAANa0YLBsfxCZFjrGIAAWFm0fRQP+CY0fmoSDAANT/dmswTCMYkc1ATFxXBUIPuMYMDCYfsquqAAOlxGqqs7CYcwT4mzqfGGgNmu9onQTB93uT4ITFzHdAAd3xM/CYo7D2eWCYtpCYY7BMYgTNY4vzCY1jz4TCT4r5Bs92v996/3AoPM2J3BCYsfm/duvDtvWnk3u9z+ITIm3d63IE4Nss48BCYhjE5l9J4t35jHFT4fzr/dJoJRBu9lO4ITBT4MsNAPhHgPM7vfnnD/t3wf+8ITB93Cy0R9e//exspNBtGGHQQLC30RtOW+3Mmcz5/ztpOC692ngLC5lvtMjmUggAABhh5BWQciBYUCCIIQCAAcjs4SBuwMHAA+V42MrISOAAMikQSQAD4='))\",\n    \"cbBtn\": 'modHS.saveDataToFile(\"sleep\", \"marker\", {\"event\":\"sleep\"});Bangle.showClock();',\n    \"debounce\": 0,\n    \"tod\": [],\n}\n</code></pre> This onscreen button returns customized javascript code that is encapsulated in quotations within the callback button key (<code>cbBtn</code>):</p> <pre><code>modHS.saveDataToFile(\"sleep\", \"marker\", {\"event\":\"sleep\"});\nBangle.showClock();\n</code></pre> <p>This first uses the <code>saveDataToFile()</code> function the HeatSuite Module (<code>modHS</code>) with three pieces of information: <pre><code>(\"sleep\", \"marker\", {\"event\":\"sleep\"})\n</code></pre></p> <ul> <li>The first item, <code>\"sleep\"</code> must match the id of the task.</li> <li>The second item, <code>\"marker\"</code> is the file identifier for where the data is stored.</li> <li>The third item is the <code>data</code> that is to be stored, in an object format. The object contains the keys and values, whereby the keys will represent the column headers. If you wish to have multiple tasks store to the same file, you must declare all the possible keys in every custom task!</li> </ul> <p>These two lines of code do the following: </p> <p>On button press, a \"sleep\" event marker will be saved to the file: <code>htst_marker_DDMMYYYY</code> on the watch and give the following headers to the csv format: <code>unix,tz,event</code> (uniz and tz[timezone] are automatically prepended to the headers).</p>"}]}